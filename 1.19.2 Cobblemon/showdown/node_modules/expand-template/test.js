/*
 * Copyright (C) 2022 Cobblemon Contributors
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */

var test = require('tape')
var Expand = require('./')

test('default expands {} placeholders', function (t) {
  var expand = Expand()
  t.equal(typeof expand, 'function', 'is a function')
  t.equal(expand('{foo}/{bar}', {
    foo: 'BAR', bar: 'FOO'
  }), 'BAR/FOO')
  t.equal(expand('{foo}{foo}{foo}', {
    foo: 'FOO'
  }), 'FOOFOOFOO', 'expands one placeholder many times')
  t.end()
})

test('support for custom separators', function (t) {
  var expand = Expand({ sep: '[]' })
  t.equal(expand('[foo]/[bar]', {
    foo: 'BAR', bar: 'FOO'
  }), 'BAR/FOO')
  t.equal(expand('[foo][foo][foo]', {
    foo: 'FOO'
  }), 'FOOFOOFOO', 'expands one placeholder many times')
  t.end()
})

test('support for longer custom separators', function (t) {
  var expand = Expand({ sep: '[[]]' })
  t.equal(expand('[[foo]]/[[bar]]', {
    foo: 'BAR', bar: 'FOO'
  }), 'BAR/FOO')
  t.equal(expand('[[foo]][[foo]][[foo]]', {
    foo: 'FOO'
  }), 'FOOFOOFOO', 'expands one placeholder many times')
  t.end()
})

test('whitespace-insensitive', function (t) {
  var expand = Expand({ sep: '[]' })
  t.equal(expand('[ foo ]/[ bar ]', {
    foo: 'BAR', bar: 'FOO'
  }), 'BAR/FOO')
  t.equal(expand('[ foo ][ foo  ][ foo]', {
    foo: 'FOO'
  }), 'FOOFOOFOO', 'expands one placeholder many times')
  t.end()
})

test('dollar escape', function (t) {
  var expand = Expand()
  t.equal(expand('before {foo} after', {
    foo: '$'
  }), 'before $ after')
  t.equal(expand('before {foo} after', {
    foo: '$&'
  }), 'before $& after')
  t.equal(expand('before {foo} after', {
    foo: '$`'
  }), 'before $` after')
  t.equal(expand('before {foo} after', {
    foo: '$\''
  }), 'before $\' after')
  t.equal(expand('before {foo} after', {
    foo: '$0'
  }), 'before $0 after')
  t.end()
})
